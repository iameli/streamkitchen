apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.global.development }}
      volumes:
        - name: streamplace
          hostPath:
            path: {{ .Values.global.rootDirectory }}
        - name: app
          hostPath:
            path: {{ .Values.global.rootDirectory }}/packages/{{ .Chart.Name }}
        - name: tmp
          emptyDir: {}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        readinessProbe:
          httpGet:
            path: /schema.json
            port: 80
          initialDelaySeconds: 3
          timeoutSeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /schema.json
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        {{- if .Values.global.development }}
        image: "{{ .Values.global.repo }}/{{ .Chart.Name }}:latest"
        command:
          - bash
          - -c
          - TMPDIR="/tmp" exec /app/node_modules/.bin/babel-watch -o 'app/src/*' /app/src/{{ .Chart.Name }}.js
        volumeMounts:
          - name: app
            mountPath: /app
          - name: streamplace
            mountPath: {{ .Values.global.rootDirectory }}
          - name: tmp
            mountPath: /tmp
        {{- else }}
        image: "{{ .Values.global.repo }}/{{ .Chart.Name }}:{{ .Chart.Version }}"
        {{- end }}
        imagePullPolicy: {{ if .Values.global.development }}Never{{ else }}Always{{ end }}
        env:
          - name: SP_DOMAIN
            value: "{{ .Values.global.domain }}"
