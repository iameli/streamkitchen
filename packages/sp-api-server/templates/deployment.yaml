apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 0
  template:
    metadata:
      {{- if not .Values.global.development }}
      {{- $values := .Values }}
      {{- $chart := .Chart }}
      {{- $pluginCount := len .Values.global.plugins }}
      {{- $last := sub $pluginCount 1 }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
        {{- range $index, $plugin := .Values.global.plugins }}
          {
            "name": "{{ $plugin }}",
            "image": "{{ $values.global.repo }}/{{ $plugin }}:v{{ $chart.Version }}",
            "command": ["cp", "-R", "/app", "/plugins/{{ $plugin }}"],
            "imagePullPolicy": "Always",
            "volumeMounts": [{
              "name": "plugins",
              "mountPath": "/plugins"
            }]
          }{{- if eq $index $last }}{{- else }},{{- end }}
        {{- end }}
        ]'
      {{- end }}
      labels:
        app: {{ template "fullname" . }}
    spec:
      {{- if .Values.global.development }}
      volumes:
        - name: streamplace
          hostPath:
            path: {{ .Values.global.rootDirectory }}
        - name: app
          hostPath:
            path: {{ .Values.global.rootDirectory }}/packages/{{ .Chart.Name }}
        - name: tmp
          emptyDir: {}
      {{- $rootDirectory := .Values.global.rootDirectory }}
      {{- range .Values.global.plugins }}
        - name: {{ . }}
          hostPath:
            path: {{ $rootDirectory }}/packages/{{ . }}
      {{- end }}
      {{- else }}
      volumes:
        - name: plugins
          emptyDir: {}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          failureThreshold: 5
          periodSeconds: 5
        {{- if .Values.global.development }}
        image: "streamplace/{{ .Chart.Name }}:latest"
        command:
          - bash
          - -c
          - TMPDIR="/tmp" exec /app/node_modules/.bin/babel-watch /app/src/{{ .Chart.Name }}.js
        volumeMounts:
          - name: app
            mountPath: /app
          - name: streamplace
            mountPath: {{ .Values.global.rootDirectory }}
          - name: tmp
            mountPath: /tmp
        {{- range .Values.global.plugins }}
          - name: {{ . }}
            mountPath: /plugins/{{ . }}
        {{- end }}
        {{- else }}
        image: "{{ .Values.global.repo }}/{{ .Chart.Name }}:v{{ .Chart.Version }}"
        volumeMounts:
          - name: plugins
            mountPath: /plugins
        {{- end }}
        imagePullPolicy: {{ if .Values.global.development }}Never{{ else }}Always{{ end }}
        env:
        - name: NODE_PATH
          value: "/plugins:/app/node_modules"
        - name: SP_DOMAIN
          value: "{{ .Values.global.domain }}"
        - name: SP_JWT_SECRET
          value: "{{ .Values.global.jwt.secret }}"
        - name: SP_JWT_AUDIENCE
          value: "{{ .Values.global.jwt.audience }}"
        - name: SP_JWT_EXPIRATION
          value: "{{ .Values.global.jwt.expiration }}"
        - name: SP_AUTH_ISSUER
          value: "{{ .Values.global.authIssuer }}"
        - name: SP_RETHINK_DATABASE
          value: {{ .Release.Name }}
        - name: SP_RETHINK_HOST
          value: {{ .Release.Name }}-sp-rethinkdb.{{ .Release.Namespace }}.svc.cluster.local
        - name: SP_SCHEMA_URL
          value: http://{{ .Release.Name }}-sp-schema.{{ .Release.Namespace }}.svc.cluster.local/schema.json
        - name: SP_RETHINK_PORT
          value: "28015"
